@startuml Statements
skinparam style strictuml
skinparam monochrome true


interface ASTNode {
    getLine(): int
    getColumn(): int
}

class AbstractASTNode {
    AbstractASTNode(int line, int column)
    getLine(): int
    getColumn(): int
    line: int
    column: int
}

interface Statement

class AbstractStatement {
    AbstractStatement(int line, int column)
}

interface Expression

class If {
    condition: Expression
    ifBody: List<Statement>
    elseBody: List<Statement>
}

class While {
    condition: Expression
    body: List<Statement>
}

class Write {
    expression: Expression
}

class Read {
    expression: Expression
}

class Assignment {
    leftExpression: Expression
    rightExpression: Expression
}

class Return {
    expression: Expression
}

class FunctionInvocation {
    variable: Variable
    parameters: List<Expression>
}

ASTNode <|-- AbstractASTNode

AbstractASTNode <|-- AbstractStatement

Statement <|.. AbstractStatement

AbstractStatement <|-- If
AbstractStatement <|-- While
AbstractStatement <|-- Write
AbstractStatement <|-- Read
AbstractStatement <|-- Assignment
AbstractStatement <|-- Return
AbstractStatement <|-- FunctionInvocation

If o-- "1" Expression
While o-- "1" Expression
Write o-- "1" Expression
Read o-- "1" Expression
Return o-- "1" Expression
Assignment o-- "2" Expression
FunctionInvocation o-- "0..n" Expression

If o-- "0..n" Statement
While o-- "0..n" Statement



@enduml
